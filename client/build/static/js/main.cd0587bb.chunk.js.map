{"version":3,"sources":["evaluator/index.ts","formatting/rangeHelpers.ts","redux/types.ts","redux/store.ts","redux/actions.ts","components/Console.tsx","formatting/specialWords.ts","formatting/index.ts","components/Editor.tsx","components/Sidebar.tsx","context.ts","theme.ts","components/ThemeSelector.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["evaluate","script","consoleOutput","newScript","console","log","m","eval","e","toString","getDelimitedRangesOf","searchStr","str","quill","color","index","withFormat","indices","startIndex","indexOf","test","length","formatText","push","start","getIndicesOf","getIndicesOfAfterKeyword","keyword","keywordRanges","afterKeyword","forEach","kw","end","getText","getIndicesByTypeInGlobal","type","re","byTypeRanges","match","exec","_e","initialState","files","filename","editorContent","activeFile","store","createStore","state","action","concat","map","file","find","Console","useSelector","dispatch","useDispatch","React","useEffect","document","addEventListener","ev","key","toUpperCase","ctrlKey","preventDefault","ConsoleOutputWrapper","RunButton","title","onClick","ConsoleOutput","styled","div","props","theme","primary","secondary","fontMono","button","tertiary","text","purpleWords","blueWords","greenWords","redChars","bracketPairs","1","2","handleFormating","source","quillRef","current","removeFormat","getLength","blue","yellow","f","consts","lightBlue","vars","lets","c","pw","purple","bw","gw","green","rc","orange","ActiveEditor","WithThemeEditor","withTheme","useRef","fileContent","Quill","modules","toolbar","root","setAttribute","focus","textChangeHandler","on","off","delta","oldDelta","insertOp","ops","op","insert","insertedChar","bracketPair","bp","insertText","getSelection","setSelection","handleBracketsDuplication","undefined","setText","EditorWrapper","EditorContainer","id","Sidebar","inputEl","useState","adding","setAdding","inputValue","setInputValue","setActiveFileHandler","setActiveFile","addFileInSidebar","filenameToAdd","getNewFilename","addFile","FilesWrapper","isActive","FileButton","AddInputWrapper","AddInput","onChange","target","value","onKeyDown","ref","AddButton","Theme","input","darkTheme","grey","otherPrimary","otherText","lightTheme","AppContext","createContext","light","setAppState","noop","ThemeSelector","appContext","useContext","setTheme","ThemeSelectorWrapper","ThemeSelect","name","defaultValue","onSelect","style","borderRadius","dark","select","getTheme","AppWrapper","IDEContainer","SidebarWrapper","ContentWrapper","App","appState","Provider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cd0587bb.chunk.js","sourcesContent":["export function evaluate(script: string): string {\n    var consoleOutput = ''\n    var newScript = script + `console.log(' ')`\n    try {\n        const console = {\n            log: function (m: any) {\n                consoleOutput = consoleOutput + m + '\\n'\n                return consoleOutput\n            },\n        }\n        return eval(newScript)\n    } catch (e) {\n        return e.toString()\n    }\n}\n","import Quill from 'quill'\nimport { WordRange } from './types'\n\nexport function getDelimitedRangesOf(\n    searchStr: string,\n    str: string,\n    quill: Quill,\n    color: string,\n    withFormat: boolean = true\n): WordRange[] {\n    const indices = []\n    let index,\n        startIndex = 0\n    while ((index = str.indexOf(searchStr, startIndex)) > -1) {\n        // Similar to regex lookahead lookbehind\n        if (\n            (index === 0 || !/[a-zA-Z0-9_]/.test(str[index - 1])) &&\n            !/[a-zA-Z0-9_]/.test(str[index + searchStr.length])\n        ) {\n            if (withFormat) {\n                quill.formatText(index, searchStr.length, { color })\n            }\n            indices.push({\n                start: index,\n                length: searchStr.length,\n            })\n        }\n\n        startIndex = index + searchStr.length\n    }\n\n    return indices\n}\n\nexport function getIndicesOf(\n    searchStr: string,\n    str: string,\n    quill: Quill,\n    color: string\n): WordRange[] {\n    const indices = []\n    let index,\n        startIndex = 0\n    while ((index = str.indexOf(searchStr, startIndex)) > -1) {\n        quill.formatText(index, searchStr.length, { color })\n        indices.push({\n            start: index,\n            length: searchStr.length,\n        })\n        startIndex = index + searchStr.length\n    }\n\n    return indices\n}\n\nexport function getIndicesOfAfterKeyword(\n    keyword: string,\n    str: string,\n    quill: Quill,\n    color: string\n): string[] {\n    const keywordRanges = getDelimitedRangesOf(keyword, str, quill, color, false)\n    const afterKeyword: string[] = []\n    keywordRanges.forEach((kw) => {\n        const start = kw.start + keyword.length + 1\n        let end = start\n        while (/[a-zA-Z0-9_]/.test(str[end]) && end < str.length) {\n            end++\n        }\n\n        if (end !== start) {\n            quill.formatText(start, end - start, { color })\n            afterKeyword.push(quill.getText(start, end - start))\n        }\n    })\n\n    return afterKeyword\n}\n\n// returns the indices of the given type in global scope e.g. console\nexport function getIndicesByTypeInGlobal(\n    type: string,\n    str: string,\n    quill: Quill,\n    color: string\n): WordRange[] {\n    const re = /\\w+/g\n    const byTypeRanges: WordRange[] = []\n    let match\n    while ((match = re.exec(str)) != null) {\n        try {\n            if (typeof eval(match.toString()) === type) {\n                quill.formatText(match.index, match.toString().length, { color })\n                byTypeRanges.push({\n                    start: match.index,\n                    length: match.toString().length,\n                })\n            }\n        } catch (_e) {}\n    }\n\n    return byTypeRanges\n}\n","export interface File {\n    filename: string\n    editorContent: string\n}\n\nexport interface AppState {\n    readonly files: ReadonlyArray<File>\n    readonly activeFile: string\n    readonly consoleOutput: string\n}\n\nexport const initialState: AppState = {\n    files: [\n        {\n            filename: 'index.js',\n            editorContent: '',\n        },\n    ],\n    activeFile: 'index.js',\n    consoleOutput: '',\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\n\nimport { AppState, initialState } from './types'\nimport { ADD_FILE, RUN_SCRIPT_FOR_ACTIVE_FILE, SET_ACTIVE_FILE, SET_SCRIPT } from './actions'\nimport { evaluate } from '../evaluator'\n\nfunction reducer(state = initialState, action: any): AppState {\n    switch (action.type) {\n        case ADD_FILE:\n            return {\n                ...state,\n                files: state.files.concat({\n                    filename: action.filename,\n                    editorContent: '',\n                }),\n            }\n        case SET_ACTIVE_FILE:\n            return {\n                ...state,\n                activeFile: action.filename,\n            }\n        case SET_SCRIPT: {\n            return {\n                ...state,\n                files: state.files.map((file) =>\n                    file.filename === action.filename\n                        ? { ...file, editorContent: action.script }\n                        : file\n                ),\n            }\n        }\n        case RUN_SCRIPT_FOR_ACTIVE_FILE:\n            return {\n                ...state,\n                consoleOutput: evaluate(\n                    state.files.find((file) => file.filename === state.activeFile)?.editorContent!\n                ),\n            }\n        default:\n            return state\n    }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nexport const store = createStore(reducer /* , applyMiddleware(logger) */)\n","/*\n * action types\n */\n\nexport const ADD_FILE = 'ADD_FILE'\nexport const RUN_SCRIPT_FOR_ACTIVE_FILE = 'RUN_SCRIPT_IN_FILE'\nexport const SET_ACTIVE_FILE = 'SET_ACTIVE_FILE'\nexport const SET_SCRIPT = 'SET_SCRIPT'\n\n/*\n * action creators\n */\n\nexport function addFile(filename: string) {\n    return { type: ADD_FILE, filename }\n}\n\nexport function runScriptForActiveFile() {\n    return { type: RUN_SCRIPT_FOR_ACTIVE_FILE }\n}\n\nexport function setScript(filename: string, script: string) {\n    return { type: SET_SCRIPT, filename, script }\n}\n\nexport function setActiveFile(filename: string) {\n    return { type: SET_ACTIVE_FILE, filename }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { runScriptForActiveFile } from '../redux/actions'\nimport { AppState } from '../redux/types'\n\nexport function Console() {\n    const consoleOutput = useSelector<AppState, string>((state) => state.consoleOutput)\n    const dispatch = useDispatch()\n    React.useEffect(() => {\n        document.addEventListener('keydown', (ev) => {\n            if (ev.key.toUpperCase() === 'S' && ev.ctrlKey) {\n                ev.preventDefault()\n                dispatch(runScriptForActiveFile())\n            }\n        })\n    }, [dispatch])\n\n    return (\n        <ConsoleOutputWrapper>\n            <RunButton title={'Ctlr+S'} onClick={() => dispatch(runScriptForActiveFile())}>\n                Run\n            </RunButton>\n            <ConsoleOutput>{consoleOutput}</ConsoleOutput>\n        </ConsoleOutputWrapper>\n    )\n}\n\nconst ConsoleOutputWrapper = styled.div`\n    background: ${(props) => props.theme.primary};\n    height: 40%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-top: solid 2px ${(props) => props.theme.secondary};\n    position: relative;\n    font-size: large;\n    font-family: ${(props) => props.theme.fontMono};\n`\n\nconst RunButton = styled.button`\n    position: absolute;\n    right: 80px;\n    top: 25px;\n    width: 70px;\n    height: 30px;\n    background-color: ${(props) => props.theme.tertiary};\n    font-family: ${(props) => props.theme.fontMono};\n    color: ${(props) => props.theme.text};\n    border: none;\n    outline: none;\n    border-radius: 10px;\n`\n\nconst ConsoleOutput = styled.div`\n    background: ${(props) => props.theme.primary};\n    height: 90%;\n    width: 90%;\n    border: solid 2px ${(props) => props.theme.secondary};\n    border-radius: 10px;\n    box-sizing: border-box;\n    padding: 20px;\n    color: ${(props) => props.theme.text};\n    white-space: pre-line;\n`\n","export const purpleWords = [\n    'await',\n    'break',\n    'case',\n    'catch',\n    'continue',\n    'default',\n    'do',\n    'else',\n    'finally',\n    'goto',\n    'if',\n    'import',\n    'package',\n    'return',\n    'switch',\n    'throw',\n    'try',\n    'while',\n    'with',\n    'yield',\n]\n\nexport const blueWords = [\n    'arguments',\n    'const',\n    'class',\n    'debugger',\n    'delete',\n    'export',\n    'false',\n    'function',\n    'in',\n    'instanceof',\n    'interface',\n    'let',\n    'new',\n    'null',\n    'private',\n    'super',\n    'this',\n    'true',\n    'var',\n    'void',\n    'typeof',\n]\n\nexport const greenWords = [\n    'abstract',\n    'boolean',\n    'byte',\n    'char',\n    'double',\n    'enum',\n    'eval',\n    'extends',\n    'false',\n    'final',\n    'finally',\n    'float',\n    'for',\n    'implements',\n    'int',\n    'long',\n    'native',\n    'package',\n    'private',\n    'protected',\n    'public',\n    'short',\n    'static',\n    'synchronized',\n    'throws',\n    'transient',\n    'volatile',\n]\n\nexport const redChars = ['(', ')', '{', '}', '[', ']', \"'\", '\"', '`']\n\nexport const bracketPairs = [\n    {\n        1: '(',\n        2: ')',\n    },\n    {\n        1: '{',\n        2: '}',\n    },\n    {\n        1: '[',\n        2: ']',\n    },\n    {\n        1: \"'\",\n        2: \"'\",\n    },\n    {\n        1: '\"',\n        2: '\"',\n    },\n    {\n        1: '`',\n        2: '`',\n    },\n]\n","import Quill from 'quill'\nimport Delta from 'quill-delta'\nimport {\n    getDelimitedRangesOf,\n    getIndicesByTypeInGlobal,\n    getIndicesOf,\n    getIndicesOfAfterKeyword,\n} from './rangeHelpers'\nimport { blueWords, bracketPairs, greenWords, purpleWords, redChars } from './specialWords'\n\nexport const handleFormating = (\n    source: string,\n    quillRef: React.MutableRefObject<Quill | undefined>,\n    theme: any\n) => {\n    if (source !== 'user') {\n        return\n    }\n\n    const quill = quillRef.current\n    if (!quill) {\n        return\n    }\n\n    const text = quill.getText()\n    if (!text) {\n        return\n    }\n\n    quillRef.current?.removeFormat(0, quillRef.current?.getLength() - 1)\n\n    // globals\n    getIndicesByTypeInGlobal('object', text, quill, theme.blue)\n    getIndicesByTypeInGlobal('function', text, quill, theme.blue)\n\n    // declarations\n    const functions = getIndicesOfAfterKeyword('function', text, quill, theme.yellow)\n    functions.forEach((f) => getIndicesOf(f, text, quill, theme.yellow))\n    const consts = getIndicesOfAfterKeyword('const', text, quill, theme.lightBlue)\n    const vars = getIndicesOfAfterKeyword('var', text, quill, theme.lightBlue)\n    const lets = getIndicesOfAfterKeyword('let', text, quill, theme.lightBlue)\n    consts\n        .concat(vars)\n        .concat(lets)\n        .forEach((c) => getIndicesOf(c, text, quill, theme.lightBlue))\n\n    // reserved words\n    purpleWords.forEach((pw) => {\n        getDelimitedRangesOf(pw, text, quill, theme.purple)\n    })\n\n    blueWords.forEach((bw) => {\n        getDelimitedRangesOf(bw, text, quill, theme.blue)\n    })\n\n    greenWords.forEach((gw) => {\n        getDelimitedRangesOf(gw, text, quill, theme.green)\n    })\n\n    redChars.forEach((rc) => {\n        getIndicesOf(rc, text, quill, theme.orange)\n    })\n}\n\nexport function handleBracketsDuplication(\n    delta: Delta,\n    quill: React.MutableRefObject<Quill | undefined>\n) {\n    if (!quill.current) return\n\n    const insertOp = delta.ops.find((op) => op.insert)\n    if (!insertOp?.insert) return\n\n    const insertedChar = insertOp.insert\n    const bracketPair = bracketPairs.find((bp) => bp[1] === insertedChar)\n    if (!bracketPair) return\n\n    quill.current?.insertText(quill.current.getSelection()?.index || 0, bracketPair[2])\n    quill.current?.setSelection((quill.current.getSelection()?.index || 1) - 1, 0)\n}\n","import React from 'react'\nimport Quill from 'quill'\nimport { AppState } from '../redux/types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setScript } from '../redux/actions'\nimport './custom-quill.css'\nimport { handleBracketsDuplication, handleFormating } from '../formatting'\nimport styled, { withTheme } from 'styled-components'\n\nexport function ActiveEditor() {\n    const activeFile = useSelector<AppState, string>((state) => state.activeFile)\n\n    return <WithThemeEditor activeFile={activeFile} />\n}\n\nconst WithThemeEditor = withTheme(Editor)\n\nfunction Editor(props: { activeFile: string; theme: any }) {\n    const quillRef = React.useRef<Quill>()\n    const dispatch = useDispatch()\n    const fileContent = useSelector<AppState, string>(\n        (state) => state.files.find((f) => f.filename === props.activeFile)?.editorContent ?? ''\n    )\n\n    React.useEffect(() => {\n        quillRef.current = new Quill('#editor', {\n            theme: 'snow',\n            modules: {\n                toolbar: false,\n            },\n        })\n        quillRef.current.root.setAttribute('spellcheck', 'false')\n        quillRef.current.focus()\n    }, [])\n\n    React.useEffect(() => {\n        const textChangeHandler = () =>\n            dispatch(setScript(props.activeFile, quillRef.current?.getText() ?? ''))\n        quillRef.current?.on('text-change', textChangeHandler)\n        // quillRef.current?.on('selection-change', selectionChangeHandler)\n        return () => {\n            quillRef.current?.off('text-change', textChangeHandler)\n        }\n    }, [dispatch, props.activeFile])\n\n    React.useEffect(() => {\n        quillRef.current?.on('text-change', (delta, oldDelta, source) => {\n            if (source === 'user') {\n                handleBracketsDuplication(delta, quillRef)\n                handleFormating(source, quillRef, props.theme)\n            }\n        })\n    }, [props.theme])\n\n    React.useEffect(() => {\n        if (quillRef.current && fileContent !== undefined) {\n            quillRef.current.setText(fileContent, 'user')\n            handleFormating('user', quillRef, props.theme)\n        }\n        // needed to avoid extra rendering\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.activeFile])\n\n    return (\n        <EditorWrapper>\n            <EditorContainer id={'editor'} />\n        </EditorWrapper>\n    )\n}\n\nconst EditorWrapper = styled.div`\n    background: ${(props) => props.theme.primary};\n    height: 60%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst EditorContainer = styled.div`\n    height: 90%;\n    width: 90%;\n    background: ${(props) => props.theme.primary};\n    border: solid 2px ${(props) => props.theme.secondary} !important;\n    border-radius: 10px;\n    caret-color: ${(props) => props.theme.text};\n    color: ${(props) => props.theme.text};\n`\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppState, File } from '../redux/types'\nimport { addFile, setActiveFile } from '../redux/actions'\nimport styled from 'styled-components'\n\nexport function Sidebar() {\n    const state = useSelector<AppState, AppState>((state) => state)\n    const dispatch = useDispatch()\n    const inputEl = React.useRef<HTMLInputElement>(null)\n\n    const [adding, setAdding] = React.useState(false)\n    const [inputValue, setInputValue] = React.useState('')\n\n    React.useEffect(() => {\n        if (adding && inputEl.current) {\n            inputEl.current.focus()\n        }\n    })\n\n    const addFileHandler = (filename: string) => {\n        dispatch(addFile(filename))\n    }\n    const setActiveFileHandler = (filename: string) => {\n        dispatch(setActiveFile(filename))\n    }\n\n    const addFileInSidebar = () => {\n        const filenameToAdd = getNewFilename(state.files, inputValue)\n\n        addFileHandler(filenameToAdd)\n        setActiveFileHandler(filenameToAdd)\n        setAdding(false)\n    }\n    const handleEnterDown = (e: any) => {\n        if (e.key === 'Enter') {\n            addFileInSidebar()\n        }\n    }\n\n    return (\n        <>\n            <FilesWrapper>\n                {state.files.map((file) => {\n                    const isActive = file.filename === state.activeFile\n                    return (\n                        <FileButton\n                            key={file.filename}\n                            onClick={() => setActiveFileHandler(file.filename)}\n                            isActive={isActive}\n                        >\n                            {file.filename}\n                        </FileButton>\n                    )\n                })}\n                {adding ? (\n                    <AddInputWrapper>\n                        <AddInput\n                            onChange={(e) => setInputValue(e.target.value)}\n                            onKeyDown={handleEnterDown}\n                            ref={inputEl}\n                        />\n                    </AddInputWrapper>\n                ) : null}\n            </FilesWrapper>\n            <AddButton onClick={() => setAdding(true)}> Add </AddButton>\n        </>\n    )\n}\n\nfunction getNewFilename(files: ReadonlyArray<File>, filename: string): string {\n    if (files.find((f) => f.filename === filename) || !filename) {\n        return getNewFilename(files, filename.concat('_'))\n    }\n\n    return filename\n}\n\nconst AddInputWrapper = styled.div`\n    display: flex;\n    background-color: ${(props) => props.theme.text};\n`\n\nconst FilesWrapper = styled.div`\n    height: 100%;\n    overflow-y: auto;\n`\n\nconst FileButton = styled.button<{ isActive: boolean }>`\n    height: 50px;\n    width: 100%;\n    box-shadow: none;\n    background-color: ${(props) => (props.isActive ? props.theme.tertiary : props.theme.secondary)};\n    color: ${(props) => props.theme.text};\n    cursor: pointer;\n    fontfamily: ${(props) => props.theme.fontMono};\n    padding: 0;\n    border-bottom: solid 2px ${(props) => props.theme.secondary};\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    outline: none;\n    font-weight: 500;\n`\n\nconst AddInput = styled.input`\n    height: 50px;\n    width: 100%;\n    border: 0;\n    box-shadow: none;\n    text-align: center;\n`\n\nconst AddButton = styled.button`\n    bottom: 0px;\n    height: 50px;\n    border-radius: 0;\n    background-color: ${(props) => props.theme.secondary};\n    color: ${(props) => props.theme.text};\n    cursor: pointer;\n    font-family: ${(props) => props.theme.fontMono};\n    font-size: 16;\n    border: none;\n    outline: none;\n    font-weight: 500;\n`\n","import { noop } from 'lodash'\nimport React from 'react'\n\nexport enum Theme {\n    dark = 'dark',\n    light = 'light',\n}\n\ninterface AppContextInterface {\n    theme: Theme\n    setAppState: React.Dispatch<React.SetStateAction<AppState>>\n}\n\nexport const AppContext = React.createContext<AppContextInterface>({\n    theme: Theme.light,\n    setAppState: noop,\n})\n\nexport interface AppState {\n    theme: Theme\n}\n","export const darkTheme = {\n    blue: '#569CD6',\n    yellow: '#D5DCAA',\n    lightBlue: '#4FC1FF',\n    purple: '#C586C0',\n    orange: '#E19577',\n    grey: '#D4D4D4',\n    primary: '#1E1E1E',\n    green: '#629155',\n    secondary: '#A89492',\n    tertiary: '#BD7B7B',\n    text: 'white',\n    fontMono: 'monospace',\n    otherPrimary: '#FDF6E3',\n    otherText: 'black',\n}\n\nexport const lightTheme = {\n    blue: '#569CD6',\n    yellow: '#D5DCAA',\n    lightBlue: '#4FC1FF',\n    purple: '#C586C0',\n    orange: '#E19577',\n    grey: '#D4D4D4',\n    primary: '#FDF6E3',\n    green: '#629155',\n    secondary: '#8CB3C8',\n    tertiary: '#AAC2CF',\n    text: 'black',\n    fontMono: 'monospace',\n    otherPrimary: '#1E1E1E',\n    otherText: 'white',\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AppContext, Theme } from '../context'\nexport function ThemeSelector() {\n    const appContext = React.useContext(AppContext)\n    const setTheme = (theme: Theme) => {\n        appContext.setAppState({ ...appContext, theme })\n    }\n\n    return (\n        <ThemeSelectorWrapper>\n            <ThemeSelect\n                name=\"theme\"\n                defaultValue={appContext.theme}\n                onChange={(e) => setTheme(e.target.value as Theme)}\n            >\n                <option value={Theme.light} onSelect={() => setTheme(Theme.light)}>\n                    &#xf185; light theme\n                </option>\n                <option\n                    style={{ borderRadius: 10 }}\n                    value={Theme.dark}\n                    onSelect={() => setTheme(Theme.dark)}\n                >\n                    &#xf186; dark theme\n                </option>\n            </ThemeSelect>\n        </ThemeSelectorWrapper>\n    )\n}\n\nconst ThemeSelect = styled.select`\n    border: none;\n    width: 150px;\n    height: 30px;\n    outline: none;\n    padding: 0px 10px 0px 10px;\n    font-size: 14px;\n    background-color: ${(props) => props.theme.otherPrimary};\n    font-family: ${(props) => props.theme.fontMono};\n    border-radius: 10px;\n    color: ${(props) => props.theme.otherText};\n`\n\nconst ThemeSelectorWrapper = styled.div`\n    position: absolute;\n    right: 30px;\n    top: 10px;\n`\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { store } from './redux/store'\n\nimport { Console } from './components/Console'\nimport { ActiveEditor } from './components/Editor'\nimport { Sidebar } from './components/Sidebar'\nimport { darkTheme, lightTheme } from './theme'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { AppContext, AppState, Theme } from './context'\nimport { ThemeSelector } from './components/ThemeSelector'\n\nfunction App() {\n    const [appState, setAppState] = React.useState<AppState>({ theme: Theme.dark })\n\n    return (\n        <AppContext.Provider\n            value={{\n                theme: appState.theme,\n                setAppState,\n            }}\n        >\n            <Provider store={store}>\n                <ThemeProvider theme={getTheme(appState.theme)}>\n                    <AppWrapper>\n                        <ThemeSelector />\n                        <IDEContainer>\n                            <SidebarWrapper>\n                                <Sidebar />\n                            </SidebarWrapper>\n                            <ContentWrapper>\n                                <ActiveEditor />\n                                <Console />\n                            </ContentWrapper>\n                        </IDEContainer>\n                    </AppWrapper>\n                </ThemeProvider>\n            </Provider>\n        </AppContext.Provider>\n    )\n}\n\nfunction getTheme(theme: Theme) {\n    switch (theme) {\n        case Theme.light:\n            return lightTheme\n        case Theme.dark:\n            return darkTheme\n    }\n}\n\nconst AppWrapper = styled.div`\n    height: 100vh;\n    width: 100vw;\n    min-height: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: ${(props) => props.theme.primary};\n`\n\nconst IDEContainer = styled.div`\n    height: 90%;\n    width: 90%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n`\n\nconst SidebarWrapper = styled.div`\n    background: ${(props) => props.theme.primary};\n    height: 100%;\n    flex-basis: 20%;\n    align-content: center;\n    display: flex;\n    flex-direction: column;\n    border-left: solid 2px;\n    border-top: solid 2px;\n    border-bottom: solid 2px;\n    border-color: ${(props) => props.theme.secondary};\n    border-radius: 20px 0 0 20px;\n    overflow: hidden;\n`\nconst ContentWrapper = styled.div`\n    flex-grow: 1;\n    height: 100%;\n    border-top: solid 2px;\n    border-right: solid 2px;\n    border-left: solid 2px;\n    border-bottom: solid 2px;\n    border-radius: 0 20px 20px 0;\n    border-color: ${(props) => props.theme.secondary};\n    overflow: hidden;\n`\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}